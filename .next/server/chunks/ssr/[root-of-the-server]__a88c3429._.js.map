{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-recipe.ts"],"sourcesContent":["// This file holds the Genkit flow for suggesting recipes based on user-provided ingredients and cuisine preferences.\n\n'use server';\n\n/**\n * @fileOverview Recipe suggestion flow.\n *\n * - suggestRecipe - A function that suggests a recipe based on available ingredients and desired cuisine.\n * - SuggestRecipeInput - The input type for the suggestRecipe function.\n * - SuggestRecipeOutput - The return type for the suggestRecipe function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestRecipeInputSchema = z.object({\n  ingredients: z\n    .string()\n    .describe('A comma-separated list of available ingredients.'),\n  cuisine: z.string().describe('The desired cuisine (e.g., Italian, Mexican).'),\n  dietaryRestrictions: z\n    .string()\n    .optional()\n    .describe('Any dietary restrictions or allergies (e.g., vegetarian, gluten-free).'),\n});\nexport type SuggestRecipeInput = z.infer<typeof SuggestRecipeInputSchema>;\n\nconst SuggestRecipeOutputSchema = z.object({\n  recipeName: z.string().describe('The name of the suggested recipe.'),\n  ingredients: z.string().describe('A list of ingredients required for the recipe.'),\n  instructions: z.string().describe('Step-by-step instructions for preparing the recipe.'),\n  estimatedCookingTime: z.string().describe('Estimated cooking time (e.g., 30 minutes).'),\n  nutritionalInformation: z.string().describe('Nutritional information for the recipe.'),\n  imageUrl: z.string().optional().describe('URL of an image of the recipe.'),\n});\nexport type SuggestRecipeOutput = z.infer<typeof SuggestRecipeOutputSchema>;\n\nexport async function suggestRecipe(input: SuggestRecipeInput): Promise<SuggestRecipeOutput> {\n  return suggestRecipeFlow(input);\n}\n\nconst recipePrompt = ai.definePrompt({\n  name: 'recipePrompt',\n  input: {schema: SuggestRecipeInputSchema},\n  output: {schema: SuggestRecipeOutputSchema},\n  prompt: `You are a world-class chef specializing in creating delicious recipes based on available ingredients and cuisine preferences.\n\n  Based on the ingredients and cuisine provided, suggest a detailed recipe including:\n  - Recipe Name\n  - Ingredients (with quantities)\n  - Step-by-step cooking instructions\n  - Estimated cooking time\n  - Nutritional information\n\n  Ingredients: {{{ingredients}}}\n  Cuisine: {{{cuisine}}}\n  Dietary Restrictions: {{#if dietaryRestrictions}}{{{dietaryRestrictions}}}{{else}}None{{/if}}\n`,\n});\n\nconst suggestRecipeFlow = ai.defineFlow(\n  {\n    name: 'suggestRecipeFlow',\n    inputSchema: SuggestRecipeInputSchema,\n    outputSchema: SuggestRecipeOutputSchema,\n  },\n  async input => {\n    const {output} = await recipePrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,qHAAqH;;;;;;AAIrH;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;IACZ,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,qBAAqB,uIAAA,CAAA,IAAC,CACnB,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1C,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC3C;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,eAAe,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACnC,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;AAYX,CAAC;AACD;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,aAAa;IACpC,OAAO;AACT;;;IAhCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { suggestRecipe, type SuggestRecipeInput, type SuggestRecipeOutput } from '@/ai/flows/suggest-recipe';\n\nexport async function getRecipeSuggestion(\n  data: SuggestRecipeInput\n): Promise<{ success: boolean; data: SuggestRecipeOutput | null; error: string | null; }> {\n  try {\n    const recipe = await suggestRecipe(data);\n    return { success: true, data: recipe, error: null };\n  } catch (error) {\n    console.error(error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, data: null, error: `Failed to get recipe suggestion. ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,oBACpB,IAAwB;IAExB,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE;QACnC,OAAO;YAAE,SAAS;YAAM,MAAM;YAAQ,OAAO;QAAK;IACpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YAAE,SAAS;YAAO,MAAM;YAAM,OAAO,CAAC,iCAAiC,EAAE,cAAc;QAAC;IACjG;AACF;;;IAXsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getRecipeSuggestion as '40aa3fc55daf9edee8c8c4e69b8d1ee15da1b642a6'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}